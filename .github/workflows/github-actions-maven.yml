name: Java CI


on: [workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-m2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build with Maven
        run: mvn -U clean   package    -pl  ./start -am -Dmaven.test.skip=true
      - name: Login to Aliyun Container Registry (ACR)
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-chengdu.aliyuncs.com
          region-id: cn-chengdu  # 3
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
#      - name: Build with Maven
#        run: mvn  spring-boot:build-image -f ./start/pom.xml -am
      - name: tag with run id
        run: docker tag docker.io/yiezi/yz-tc-start:latest  registry.cn-chengdu.aliyuncs.com/yiezi/yz-tc-start:${{ github.run_id }}
      - name: push
        run: docker push registry.cn-chengdu.aliyuncs.com/yiezi/yz-tc-start:${{ github.run_id }}
      - name: change permissions
        run: chmod +x k8s/api/replace.sh
      - name: replace tag
        run: k8s/api/replace.sh API_TAG ${{ github.run_id }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
        id: extract_branch
      - name: deploy to cluster
        if: steps.extract_branch.outputs.branch == 'master'
        uses: steebchen/kubectl@v2.0.0
        with: # defaults to latest kubectl binary version
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: apply -f k8s/api/deployment.yaml
